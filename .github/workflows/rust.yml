name: Build & Test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    # Only RustCrypto for now, the macOS CI machines are too old
    - uses: actions/checkout@v2
    - name: Run tests w/ RustCrypto
      run: cargo test --verbose --no-default-features --features="rust-crypto"
    - name: Run tests all features w/ RustCrypto
      run: cargo test --verbose --no-default-features --features="rust-crypto serialization"
      # Release
    - name: Build Release w/ RustCrypto
      run: cargo build --release --verbose --no-default-features --features="rust-crypto"
    - name: Run tests all features w/ RustCrypto
      run: cargo test --release --verbose --no-default-features --features="rust-crypto serialization"
    # Evercrypt backend only on non-macOS
    - name: Run tests
      if: matrix.os != 'macos-latest'
      run: cargo test --verbose
    - name: Run tests all features
      if: matrix.os != 'macos-latest'
      run: cargo test --verbose --features="serialization"
      # Release
    - name: Build Release
      if: matrix.os != 'macos-latest'
      run: cargo build --release --verbose
    - name: Run tests all features
      if: matrix.os != 'macos-latest'
      run: cargo test --release --verbose --features="serialization"
  fuzz:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-fuzz
          version: latest
      - name: Fuzz Base
        if: matrix.os == 'ubuntu-latest'
        run: cargo fuzz run base -- -runs=10000
      - name: Fuzz Base w/ RustCrypto
        if: matrix.os == 'ubuntu-latest'
        run: cargo fuzz run base -- -runs=10000
